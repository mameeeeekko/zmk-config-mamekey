#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <behaviors/rgbled_widget.dtsi>

#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };        

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 3>;
        };
        
        single_quotation {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <6 7>;
        };
                       
        tab {
            bindings = <&kp TAB>;
            key-positions = <8 9>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <9 10>;
        };

        l3_arrow {
            bindings = <&mo 3>;
            key-positions = <13 14>;
        };
                        
        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 21>;
        };

        ctrl_alt_del {
            bindings = <&kp LC(RA(DEL))>;
            key-positions = <22 23>;
        };

        atmark {
            bindings = <&kp AT_SIGN>;
            key-positions = <31 32>;
        };
    };

    behaviors {
        
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt 3 LA(GRAVE)>, <&kp LC(SPC)>;
        };               
    };
    
    

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R         &kp T                                  &kp Y               &kp U          &kp I        &kp O       &kp P
&mt LEFT_SHIFT A  &kp S         &kp D         &kp F         &kp G        &tog 1                    &kp H               &kp J          &kp K        &kp L       &mt RIGHT_SHIFT SQT
&kp Z             &kp X         &kp C         &kp V         &kp B        &td_mt                    &kp N               &kp M          &kp COMMA    &kp DOT     &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp DEL       &lt 1 SPACE  &trans                    &lt 2 ENTER         &kp BACKSPACE  &tog 4       &tog 6      &rgb_ug RGB_TOG

            >;   

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

                 NUM {
            bindings = <
&kp C_VOL_DN             &kp C_VOL_UP             &kp LC(LS(TAB))         &kp LC(TAB)              &kp F5               &kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS
&kp LG(LS(LEFT_ARROW))   &kp LG(LS(RIGHT_ARROW))  &kp LA(LEFT_ARROW)      &kp LA(RIGHT_ARROW)      &kp LG(TAB)  &trans  &kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS
&trans                   &trans                   &kp LG(LC(LEFT_ARROW))  &kp LG(LC(RIGHT_ARROW))  &kp C_MUTE   &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL
&trans                   &trans                   &trans                  &trans                   &trans       &trans  &trans           &trans           &trans           &kp PERIOD       &trans

            >;
            
            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;

        };

              SYMBOLS {
            bindings = <
&kp MINUS      &kp DOUBLE_QUOTES  &kp EXCLAMATION  &kp ASTERISK  &kp PLUS                 &kp CARET  &kp UNDERSCORE   &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp AMPERSAND  &kp SINGLE_QUOTE   &kp DOLLAR       &trans        &kp BACKSLASH   &trans   &kp HASH   &trans           &kp PERCENT   &kp LEFT_BRACKET      &kp LEFT_BRACKET
&trans         &trans             &trans           &trans        &kp PIPE        &trans   &kp TILDE  &trans           &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE 
&kp F6         &kp F7             &kp F8           &trans        &trans          &trans   &trans     &trans           &trans        &trans                &trans 


            >;
            
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

               ARROW {
            bindings = <
&trans    &trans          &kp UP_ARROW    &trans           &trans           &trans    &trans          &kp UP_ARROW    &trans           &trans
&kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans  &kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END 
&trans    &trans          &trans          &trans           &trans   &trans  &trans    &trans          &trans          &trans           &trans
&trans    &trans          &trans          &trans           &trans   &trans  &trans    &trans          &trans          &trans           &trans


            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };
        
            layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans


            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };
        
        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans

            >;
        };

        layer_6 {
            bindings = <
&bt BT_CLR_ALL  &trans  &trans      &trans        &bt BT_CLR                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans        &trans       &trans        &trans        &trans        &trans           &trans
&trans  &trans        &trans        &trans        &trans        &bootloader  &trans        &trans        &trans        &rgb_ug RGB_BRI  &rgb_ug RGB_BRD
&ind_bat  &ind_con        &trans        &trans        &trans        &trans       &trans        &trans        &trans        &trans           &trans


            >;
        };        
     };   
};