#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <behaviors/rgbled_widget.dtsi>

#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 0>;
        };        

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 1>;
        };
        
        single_quotation {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <6 5>;
        };
                       
        tab {
            bindings = <&kp TAB>;
            key-positions = <8 7>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <9 8>;
        };

        l3_arrow {
            bindings = <&mo 3>;
            key-positions = <13 12>;
        };
                        
        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 19>;
        };

        ctrl_alt_del {
            bindings = <&kp LC(RA(DEL))>;
            key-positions = <22 21>;
        };

        atmark {
            bindings = <&kp AT_SIGN>;
            key-positions = <31 30>;
        };
    };

    behaviors {
        
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&lt 3 LA(GRAVE)>, <&kp LC(SPC)>;
        };
        
    alt_p: alt-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp 0>, <&kp TAB>;
        mods = <(MOD_LALT|MOD_RALT)>;
        keep-mods = <(MOD_LALT)>;
    };
    gui_p: gui-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp 0>, <&kp RIGHT>;
        mods = <(MOD_LGUI|MOD_RGUI)>;
        keep-mods = <(MOD_LGUI)>;
    };
    ag_p: alt-gui-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&gui_p>, <&alt_p>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    arrow_p: arrow-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp RIGHT>, <&kp DOWN>;
        mods = <(MOD_LCTL|MOD_RCTL)>;
    };
    vol_arrow_p: volume-arrow-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp C_VOL_UP>, <&arrow_p>;
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
    };
    vol_alt_gui_p: volume-alt-gui-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&vol_arrow_p>, <&ag_p>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
    };
    alt_n: alt-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp 0>, <&kp LS(TAB)>;
        mods = <(MOD_LALT|MOD_RALT)>;
        keep-mods = <(MOD_LALT)>;
    };
    gui_n: gui-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp 0>, <&kp LEFT>;
        mods = <(MOD_LGUI|MOD_RGUI)>;
        keep-mods = <(MOD_LGUI)>;
    };
    ag_n: alt-gui-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&gui_n>, <&alt_n>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    arrow_n: arrow-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LEFT>, <&kp UP>;
        mods = <(MOD_LCTL|MOD_RCTL)>;
    };
    vol_arrow_n: volume-arrow-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp C_VOL_DN>, <&arrow_n>;
        mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
    };
    vol_alt_gui_n: volume-right-alt-gui-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&vol_arrow_n>, <&ag_n>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
    };
    vol_alt_tab: volume-alt-tab {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&vol_alt_gui_n>, <&vol_alt_gui_p>;
        tap-ms = <10>;
    }; 
        
    led_ca_p: ctrl-alt-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp RGB_HUI>, <&kp RGB_SAI>;
        mods = <MOD_LCTL|MOD_RCTL)>;
    };
    led_br_sa_hu_p: led-br-sa-hu-positive {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&led_ca_p>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL)>;
    };
    
    led_ca_n: ctrl-alt-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&rgb_ug RGB_HUD>, <&rgb_ug RGB_SAD>;
        mods = <MOD_LCTL|MOD_RCTL)>;
    };
    led_br_sa_hu_n: led-br-sa-hu-negative {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRD>, <&led_ca_n>;
        mods = <(MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL)>;
    }; 
    led_control: led-control {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&led_br_sa_hu_n>, <&led_br_sa_hu_p>;
        tap-ms = <10>;
    };           
};
    
    

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R         &kp T                                  &kp Y               &kp U          &kp I        &kp O       &kp P
&mt LEFT_SHIFT A  &kp S         &kp D         &kp F         &kp G        &tog 1                    &kp H               &kp J          &kp K        &kp L       &mt RIGHT_SHIFT SQT
&kp Z             &kp X         &kp C         &kp V         &kp B        &td_mt                    &kp N               &kp M          &kp COMMA    &kp DOT     &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL DEL       &lt 1 SPACE  &trans                    &lt 2 BACKSPACE     &kp ENTER  &tog 4       &tog 6      &rgb_ug RGB_TOG

            >;   

            sensor-bindings = <&vol_alt_tab>;
        };

                 NUM {
            bindings = <
&kp C_VOL_DN             &kp C_VOL_UP             &kp LC(LS(TAB))         &kp LC(TAB)              &kp F5               &kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS
&kp LG(LS(LEFT_ARROW))   &kp LG(LS(RIGHT_ARROW))  &kp LA(LEFT_ARROW)      &kp LA(RIGHT_ARROW)      &kp LG(TAB)  &trans  &kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS
&trans                   &trans                   &kp LG(LC(LEFT_ARROW))  &kp LG(LC(RIGHT_ARROW))  &kp C_MUTE   &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL
&trans                   &trans                   &trans                  &trans                   &trans       &trans  &trans           &trans           &trans           &kp PERIOD       &trans

            >;
            
            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;

        };

              SYMBOLS {
            bindings = <
&kp MINUS      &kp DOUBLE_QUOTES  &kp EXCLAMATION  &kp ASTERISK  &kp PLUS                 &kp CARET  &kp UNDERSCORE   &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp AMPERSAND  &kp SINGLE_QUOTE   &kp DOLLAR       &trans        &kp BACKSLASH   &trans   &kp HASH   &trans           &kp PERCENT   &kp LEFT_BRACKET      &kp LEFT_BRACKET
&trans         &trans             &trans           &trans        &kp PIPE        &trans   &kp TILDE  &trans           &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE 
&kp F6         &kp F7             &kp F8           &trans        &trans          &trans   &trans     &trans           &trans        &trans                &trans 


            >;
            
            sensor-bindings = <&vol_alt_tab>;
        };

               ARROW {
            bindings = <
&trans    &trans          &kp UP_ARROW    &trans           &trans           &trans    &trans          &kp UP_ARROW    &trans           &trans
&kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans  &kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END 
&trans    &trans          &trans          &trans           &trans   &trans  &trans    &trans          &trans          &trans           &trans
&trans    &trans          &trans          &trans           &trans   &trans  &trans    &trans          &trans          &trans           &trans


            >;

            sensor-bindings = <&vol_alt_tab>;
        };
        
            layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans


            >;

            sensor-bindings = <&vol_alt_tab>;
        };
        
        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans

            >;
            sensor-bindings = <&vol_alt_tab>;
        };

        layer_6 {
            bindings = <
&bt BT_CLR_ALL  &trans  &trans      &trans        &bt BT_CLR                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans        &trans       &trans        &trans        &trans        &trans           &trans
&trans  &trans        &trans        &trans        &trans        &bootloader  &trans        &trans        &trans        &rgb_ug RGB_BRI  &rgb_ug RGB_BRD
&ind_bat  &ind_con        &trans        &trans        &trans        &trans       &trans        &trans        &trans        &trans           &trans


            >;
            sensor-bindings = <&led_control>;
        };        
     };   
};

/ {
    aliases {
        led-red = &led0;
        led-green = &led1;
        led-blue = &led2;
    };

    leds {
        compatible = "gpio-leds";
        status = "okay";
        led0: led_0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;  // red LED, connected to P0.26
        };
        led1: led_1 {
            gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;  // green LED, connected to P0.30
        };
        led2: led_2 {
            gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;  // blue LED, connected to P0.06
        };
    };
};